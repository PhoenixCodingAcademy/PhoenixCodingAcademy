description: |
  Scoop installs programs from the command line with a minimal amount of friction. It:

  * Eliminates permission popup windows
  * Hides GUI wizard-style installers
  * Prevents PATH pollution from installing lots of programs
  * Avoids unexpected side-effects from installing and uninstalling programs
  * Finds and installs dependencies automatically
  * Performs all the extra setup steps itself to get a working program

  The apps that install best with Scoop are commonly called "portable" apps: i.e. compressed program files
  that run stand-alone when extracted and don't have side-effects like changing the registry or putting files
  outside the program directory.

links:
- https://github.com/ScoopInstaller/Scoop
- url: https://github.com/ScoopInstaller/scoop/wiki/So-What
  text: Why should you care about Scoop?
- url: https://scoop.sh/
  text: Search Scoop Packages

courses:
- id: scoop_course1
  title: Install scoop on a Windows laptop with no admin permissions.
  description: |
    You have a school laptop, and it's all locked down. You want to install scoop but supposedly this requires elevated permissions.
    First determine if it is already installed.

    * Create a folder for scoop off your apps folder; e.g. `C:\sofia\scoop`
    * Set environment variable "SCOOP" to point to that scoop folder; e.g. `set SCOOP=C:\sofia\scoop`
    * Start [Powershell](/subjects/powershell)
    * Run `cd C:\sofia\scoop`
    * Run `irm get.scoop.sh | iex`
    * This should automatically create the necessary files in the scoop folder.
    * VERIFY: you have `C:\sofia\scoop\shims` in your environment path files.
    * Reopen your command shell and type `scoop`. You should see:
    ```dos
    Usage: scoop <command> [<args>]
    ...
    ```
    * Otherwise, something is not set up. Retrace your steps.

    Alternatively:
    * Run `irm get.scoop.sh -outfile 'install.ps1'
    * Run `.\install.ps1 -?`
    * Run `.\install.ps1 -ScoopDir 'C:\sofia\scoop' -ScoopGlobalDir 'C:\sofia\scoop' -NoProxy`

  assignments:
  - id: scoop_course1_1
    title: Prove you have installed scoop and can run it.
    acceptance: |
      * WHEN I start a command shell
      * AND I type `scoop`
      * THEN I see:
      ```dos
      Usage: scoop <command> [<args>]
      ...

- id: scoop_course2
  title: Install something with scoop
  description: |
    You have a school laptop, and it's all locked down. You want to install scoop but supposedly this requires elevated permissions.

  assignments:
  - id: scoop_course1_2
    title: Prove you can install something with scoop
    prerequisites: scoop_course1_1
    description: |
      You now have scoop installed on your machine. Let's use it!

      You can find all the programs you can install at https://scoop.sh/ by just searching. You can use terms like "games" or "language".
      Whatever app you find, it will have a name like "whatever". To install that app,
      just type (in the command line) `scoop install whatever`. Chances are that when it's finished, you can run the app by typing `whatever`.

      * At the command prompt, type "which".
      * Hopefully, you will get `'which' is not recognized as an internal or external command, operable program or batch file.`
      * This means "which" is not installed. So let's install it.
      * See [which](https://linuxhandbook.com/which-command/) for a description of what it does.
      * Type `scoop install which`
      * Now type "which".
      * You should see that it does something, like tell you that you need to add some parameters to use it.
      * Type `which powershell`
      * It should respond with `C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.EXE` or some path to the program.
      * This is what "which" does: it tells you in which path a program is installed.

    acceptance: |
      * WHEN I start a command shell
      * AND I type `which `
      * THEN I see:
      ```dos
      Usage: scoop <command> [<args>]
      ...
